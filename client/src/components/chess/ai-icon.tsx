import type { AiModelProvider } from '@/types/ai-models'

const avatarImages: Record<NonNullable<AiModelProvider>, string> = {
  openai: '/avatars/openai-white.png',
  gemini: '/avatars/gemini-white.png',
  claude: '/avatars/claude.png',
  grok: '/avatars/grok-white.png',
}

const OpenAI = ({ color }: { color?: string }) => {
  return (
    <svg width="24" height="24" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M18.5684 8.18423C18.792 7.51079 18.8693 6.79739 18.7952 6.09168C18.7211 5.38596 18.4973 4.70419 18.1386 4.0919C17.6069 3.16642 16.7951 2.43369 15.8201 1.99936C14.8451 1.56503 13.7574 1.45153 12.7138 1.67523C12.1209 1.0157 11.3649 0.523789 10.5217 0.248906C9.67848 -0.0259764 8.7778 -0.0741542 7.9101 0.109212C7.0424 0.292578 6.23822 0.701031 5.57834 1.29355C4.91845 1.88607 4.42609 2.64179 4.1507 3.48481C3.45542 3.62739 2.79858 3.91672 2.22408 4.33347C1.64958 4.75023 1.17064 5.28481 0.819284 5.90148C0.281813 6.82542 0.0521017 7.89634 0.16336 8.95943C0.274618 10.0225 0.721081 11.0227 1.4382 11.8153C1.21375 12.4884 1.13564 13.2017 1.20908 13.9074C1.28251 14.6132 1.50581 15.2951 1.86403 15.9076C2.3964 16.8334 3.20897 17.5663 4.18463 18.0006C5.16028 18.4349 6.24865 18.5483 7.29287 18.3243C7.76392 18.8548 8.34272 19.2786 8.99062 19.5676C9.63853 19.8566 10.3406 20.004 11.05 20C12.1197 20.001 13.1621 19.662 14.0266 19.032C14.8911 18.4021 15.5331 17.5137 15.8599 16.4951C16.5551 16.3523 17.2118 16.0629 17.7863 15.6461C18.3607 15.2294 18.8397 14.6949 19.1913 14.0784C19.7224 13.1558 19.9482 12.0889 19.8363 11.0303C19.7244 9.97163 19.2806 8.9754 18.5684 8.18423ZM11.05 18.691C10.174 18.6924 9.32537 18.3853 8.65303 17.8236L8.77128 17.7566L12.7532 15.4581C12.8523 15.4 12.9346 15.3171 12.992 15.2176C13.0493 15.118 13.0798 15.0053 13.0805 14.8904V9.27631L14.7638 10.2501C14.7721 10.2544 14.7793 10.2605 14.7848 10.268C14.7903 10.2755 14.794 10.2843 14.7955 10.2935V14.9456C14.7933 15.9383 14.3981 16.8898 13.6961 17.5917C12.9942 18.2936 12.0427 18.6889 11.05 18.691ZM2.99945 15.2531C2.56009 14.4945 2.40234 13.6052 2.55395 12.7417L2.67228 12.8127L6.65812 15.1112C6.75674 15.1691 6.86902 15.1996 6.98337 15.1996C7.09772 15.1996 7.20999 15.1691 7.30862 15.1112L12.1776 12.3041V14.2478C12.1772 14.2579 12.1744 14.2677 12.1696 14.2766C12.1649 14.2855 12.1581 14.2932 12.15 14.2991L8.11678 16.6251C7.25606 17.121 6.23374 17.255 5.27429 16.9978C4.31484 16.7405 3.49669 16.1131 2.99945 15.2531ZM1.95078 6.57965C2.39319 5.81612 3.09148 5.23375 3.92203 4.93565V9.66665C3.92054 9.78094 3.94974 9.89355 4.0066 9.99271C4.06346 10.0919 4.14589 10.174 4.24528 10.2304L9.09062 13.0256L7.4072 13.9994C7.39809 14.0042 7.38793 14.0068 7.37762 14.0068C7.3673 14.0068 7.35714 14.0042 7.34803 13.9994L3.32278 11.6773C2.46367 11.1793 1.83691 10.3612 1.57976 9.40204C1.3226 8.44291 1.45602 7.42095 1.95078 6.55998V6.57965ZM15.781 9.79281L10.92 6.96998L12.5995 5.99998C12.6086 5.99514 12.6187 5.99261 12.629 5.99261C12.6393 5.99261 12.6495 5.99514 12.6586 5.99998L16.6839 8.32606C17.2993 8.68119 17.8011 9.20407 18.1305 9.83365C18.4599 10.4632 18.6035 11.1735 18.5444 11.8816C18.4853 12.5898 18.2259 13.2664 17.7967 13.8327C17.3674 14.3989 16.7859 14.8314 16.1201 15.0796V10.3486C16.1166 10.2345 16.0835 10.1232 16.0241 10.0258C15.9646 9.92833 15.8809 9.8481 15.781 9.79281ZM17.4566 7.27356L17.3383 7.20256L13.3604 4.8844C13.2611 4.82617 13.1482 4.79547 13.0331 4.79547C12.9181 4.79547 12.8051 4.82617 12.7059 4.8844L7.84095 7.6914V5.74781C7.83992 5.73793 7.84157 5.72795 7.84573 5.71893C7.8499 5.70991 7.85642 5.70218 7.86462 5.69656L11.8899 3.3744C12.5068 3.01899 13.2122 2.84659 13.9235 2.87736C14.6348 2.90813 15.3226 3.14079 15.9066 3.54813C16.4905 3.95548 16.9464 4.52066 17.2209 5.17759C17.4954 5.83452 17.5772 6.55602 17.4567 7.25773L17.4566 7.27356ZM6.9222 10.7191L5.23887 9.74931C5.23045 9.74424 5.22324 9.73738 5.21777 9.72921C5.2123 9.72105 5.20869 9.71178 5.2072 9.70206V5.06181C5.20813 4.34996 5.41169 3.65307 5.79408 3.05264C6.17647 2.45222 6.72189 1.97305 7.36657 1.67118C8.01125 1.3693 8.72854 1.2572 9.43459 1.34796C10.1406 1.43873 10.8063 1.72861 11.3536 2.18373L11.2353 2.25081L7.25345 4.54915C7.15435 4.60727 7.07207 4.69017 7.01469 4.78971C6.95732 4.88925 6.92682 5.00201 6.9262 5.1169L6.9222 10.7191ZM7.83687 8.74798L10.0052 7.49815L12.1776 8.74798V11.2475L10.0131 12.4972L7.84087 11.2475L7.83687 8.74798Z"
        fill={color}
      />
    </svg>
  )
}

export const AiIcon = ({ ai, color }: { ai: NonNullable<AiModelProvider>; color?: string }) => {
  if (ai === 'openai') {
    return (
      <div className="w-[24px] h-[24px] flex items-center justify-center">
        <OpenAI color={color} />
      </div>
    )
  }

  return <img src={avatarImages[ai]} alt={ai} className="w-[24px] h-[24px] rounded-full" />
}
